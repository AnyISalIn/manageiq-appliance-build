# Create a script to initialize appliance on first boot
cat > /bin/appliance-initialize.sh <<EOF
#!/bin/sh
[[ -d /var/opt/rh/rh-postgresql94/lib/pgsql/data/base ]] && exit 0
[[ -s /etc/default/evm ]] && source /etc/default/evm
echo "Initializing Appliance, please wait ..." > /dev/tty1
appliance_console_cli --region 0 --internal --password smartvm
EOF
chmod 755 /bin/appliance-initialize.sh

# Create a systemd service to run it on first boot
cat > /usr/lib/systemd/system/appliance-initialize.service <<EOF
[Unit]
Description=Initialize Appliance Database
ConditionPathExists=!/var/opt/rh/rh-postgresql94/lib/pgsql/data/base
After=evminit.service memcached.service
Before=evmserverd.service
Requires=memcached.service
[Service]
Type=oneshot
ExecStart=/bin/appliance-initialize.sh
ExecStartPost=/usr/bin/systemctl disable appliance-initialize
[Install]
WantedBy=multi-user.target
EOF

# Finally, enable the service
systemctl enable appliance-initialize

cat > /bin/vaneq-config.sh <<'EOF'
#!/bin/bash

read -p 'Input You IP Address: ' ip

pushd /opt/manageiq/vaneq
    if [ -v ip ]; then
        cp src/assets/js/config/domain.js.template src/assets/js/config/domain.js
        sed -i "s/127.0.0.1/${ip}/gi" /opt/manageiq/vaneq/src/assets/js/config/domain.js
        if [ $? -eq 0 ]; then
            node build/build.js
        fi
    fi
popd
EOF

# chmod
chmod 755 /bin/vaneq-config.sh
